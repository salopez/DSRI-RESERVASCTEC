//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DSRI.wsSeguridad {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.itcr.ac.cr", ConfigurationName="wsSeguridad.SeguridadSoap")]
    public interface SeguridadSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidarUsuario(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidarUsuarioAsync(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarEstudiante", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidarEstudiante(string carne, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarEstudiante", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidarEstudianteAsync(string carne, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarEstudianteBit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidarEstudianteBit(string carne, string pin, int codAplicacion, string codSede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarEstudianteBit", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidarEstudianteBitAsync(string carne, string pin, int codAplicacion, string codSede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/EsEstudianteActivo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EsEstudianteActivo(string carne);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/EsEstudianteActivo", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EsEstudianteActivoAsync(string carne);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/EsEstudiante", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EsEstudiante(string carne);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/EsEstudiante", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EsEstudianteAsync(string carne);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarFuncionario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidarFuncionario(string usuario, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarFuncionario", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidarFuncionarioAsync(string usuario, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarFuncionarioBit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidarFuncionarioBit(string usuario, string password, int codAplicacion, string codSede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarFuncionarioBit", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidarFuncionarioBitAsync(string usuario, string password, int codAplicacion, string codSede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarFuncionarioBitSinCedula", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidarFuncionarioBitSinCedula(string usuario, string password, int codAplicacion, string codSede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarFuncionarioBitSinCedula", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidarFuncionarioBitSinCedulaAsync(string usuario, string password, int codAplicacion, string codSede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ComprobarUsuarioAD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DSRI.wsSeguridad.ComprobarUsuarioADResponse ComprobarUsuarioAD(DSRI.wsSeguridad.ComprobarUsuarioADRequest request);
        
        // CODEGEN: Generando contrato de mensaje, ya que la operación tiene múltiples valores de devolución.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ComprobarUsuarioAD", ReplyAction="*")]
        System.Threading.Tasks.Task<DSRI.wsSeguridad.ComprobarUsuarioADResponse> ComprobarUsuarioADAsync(DSRI.wsSeguridad.ComprobarUsuarioADRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ComprobarEstudiante", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DSRI.wsSeguridad.ComprobarEstudianteResponse ComprobarEstudiante(DSRI.wsSeguridad.ComprobarEstudianteRequest request);
        
        // CODEGEN: Generando contrato de mensaje, ya que la operación tiene múltiples valores de devolución.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ComprobarEstudiante", ReplyAction="*")]
        System.Threading.Tasks.Task<DSRI.wsSeguridad.ComprobarEstudianteResponse> ComprobarEstudianteAsync(DSRI.wsSeguridad.ComprobarEstudianteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarUsuarioSistema", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidarUsuarioSistema(string usuario, string password, int codAplicacion, string codSede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ValidarUsuarioSistema", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidarUsuarioSistemaAsync(string usuario, string password, int codAplicacion, string codSede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/TienePermisoFuncionalidad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool TienePermisoFuncionalidad(int pCOD_APLICACION, int pCOD_FUNCIONALIDAD, string pID_USUARIO, string pCOD_SEDE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/TienePermisoFuncionalidad", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> TienePermisoFuncionalidadAsync(int pCOD_APLICACION, int pCOD_FUNCIONALIDAD, string pID_USUARIO, string pCOD_SEDE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/TieneAccesoAplicacion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool TieneAccesoAplicacion(int pCOD_APLICACION, string pID_USUARIO, string pCOD_SEDE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/TieneAccesoAplicacion", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> TieneAccesoAplicacionAsync(int pCOD_APLICACION, string pID_USUARIO, string pCOD_SEDE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerMenuUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerMenuUsuario(int pCod_Aplicacion, string pId_Usuario, string pCod_Sede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerMenuUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerMenuUsuarioAsync(int pCod_Aplicacion, string pId_Usuario, string pCod_Sede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerCedula", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ObtenerCedula(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerCedula", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ObtenerCedulaAsync(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerDepartamento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ObtenerDepartamento(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerDepartamento", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ObtenerDepartamentoAsync(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerNombreUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ObtenerNombreUsuario(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerNombreUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ObtenerNombreUsuarioAsync(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerSedeUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ObtenerSedeUsuario(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerSedeUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ObtenerSedeUsuarioAsync(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerListaSedes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerListaSedes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerListaSedes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerListaSedesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/BuscarUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarUsuario(string txtBusqueda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/BuscarUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarUsuarioAsync(string txtBusqueda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/BuscarUsuarioXCedula", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BuscarUsuarioXCedula(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/BuscarUsuarioXCedula", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BuscarUsuarioXCedulaAsync(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/BitacoraRegistrarUso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void BitacoraRegistrarUso(int pCod_Aplicacion, int pCod_Funcionalidad, string pCod_Sede, DSRI.wsSeguridad.eTipoEventoBitacora pTipo_Evento, string pId_Usuario, string pDatosEspecificos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/BitacoraRegistrarUso", ReplyAction="*")]
        System.Threading.Tasks.Task BitacoraRegistrarUsoAsync(int pCod_Aplicacion, int pCod_Funcionalidad, string pCod_Sede, DSRI.wsSeguridad.eTipoEventoBitacora pTipo_Evento, string pId_Usuario, string pDatosEspecificos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/CambiarPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CambiarPassword(string usuario, string passwordActual, string passwordNuevo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/CambiarPassword", ReplyAction="*")]
        System.Threading.Tasks.Task CambiarPasswordAsync(string usuario, string passwordActual, string passwordNuevo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerUsuariosDeRol", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerUsuariosDeRol(int pCOD_ROL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerUsuariosDeRol", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerUsuariosDeRolAsync(int pCOD_ROL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerRolesDeUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerRolesDeUsuario(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ObtenerRolesDeUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerRolesDeUsuarioAsync(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ConsultaBitacora", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaBitacora(int pCOD_APLICACION, string pID_USUARIO, System.DateTime pFHO_INICIO, System.DateTime pFHO_FIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/ConsultaBitacora", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaBitacoraAsync(int pCOD_APLICACION, string pID_USUARIO, System.DateTime pFHO_INICIO, System.DateTime pFHO_FIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/getUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getUser(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/getUser", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getUserAsync(string pID_USUARIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/getUserByMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getUserByMail(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/getUserByMail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getUserByMailAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/findUserByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet findUserByName(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/findUserByName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> findUserByNameAsync(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/findUserByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet findUserByEmail(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/findUserByEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> findUserByEmailAsync(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/TipoUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int TipoUsuario(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/TipoUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<int> TipoUsuarioAsync(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/TDInformacionUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TDInformacionUsuario(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/TDInformacionUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TDInformacionUsuarioAsync(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/TDProfesores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TDProfesores(string ano, string modalidad, string periodo, string departamento, string sede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itcr.ac.cr/TDProfesores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TDProfesoresAsync(string ano, string modalidad, string periodo, string departamento, string sede);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ComprobarUsuarioAD", WrapperNamespace="http://www.itcr.ac.cr", IsWrapped=true)]
    public partial class ComprobarUsuarioADRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.itcr.ac.cr", Order=0)]
        public string usuario;
        
        public ComprobarUsuarioADRequest() {
        }
        
        public ComprobarUsuarioADRequest(string usuario) {
            this.usuario = usuario;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ComprobarUsuarioADResponse", WrapperNamespace="http://www.itcr.ac.cr", IsWrapped=true)]
    public partial class ComprobarUsuarioADResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.itcr.ac.cr", Order=0)]
        public bool ComprobarUsuarioADResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.itcr.ac.cr", Order=1)]
        public string nombre;
        
        public ComprobarUsuarioADResponse() {
        }
        
        public ComprobarUsuarioADResponse(bool ComprobarUsuarioADResult, string nombre) {
            this.ComprobarUsuarioADResult = ComprobarUsuarioADResult;
            this.nombre = nombre;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ComprobarEstudiante", WrapperNamespace="http://www.itcr.ac.cr", IsWrapped=true)]
    public partial class ComprobarEstudianteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.itcr.ac.cr", Order=0)]
        public string carne;
        
        public ComprobarEstudianteRequest() {
        }
        
        public ComprobarEstudianteRequest(string carne) {
            this.carne = carne;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ComprobarEstudianteResponse", WrapperNamespace="http://www.itcr.ac.cr", IsWrapped=true)]
    public partial class ComprobarEstudianteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.itcr.ac.cr", Order=0)]
        public bool ComprobarEstudianteResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.itcr.ac.cr", Order=1)]
        public string nombre;
        
        public ComprobarEstudianteResponse() {
        }
        
        public ComprobarEstudianteResponse(bool ComprobarEstudianteResult, string nombre) {
            this.ComprobarEstudianteResult = ComprobarEstudianteResult;
            this.nombre = nombre;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.itcr.ac.cr")]
    public enum eTipoEventoBitacora {
        
        /// <comentarios/>
        Acceso,
        
        /// <comentarios/>
        UsoFuncionalidad,
        
        /// <comentarios/>
        Error,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SeguridadSoapChannel : DSRI.wsSeguridad.SeguridadSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SeguridadSoapClient : System.ServiceModel.ClientBase<DSRI.wsSeguridad.SeguridadSoap>, DSRI.wsSeguridad.SeguridadSoap {
        
        public SeguridadSoapClient() {
        }
        
        public SeguridadSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SeguridadSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SeguridadSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SeguridadSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ValidarUsuario(string login, string pass) {
            return base.Channel.ValidarUsuario(login, pass);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarUsuarioAsync(string login, string pass) {
            return base.Channel.ValidarUsuarioAsync(login, pass);
        }
        
        public bool ValidarEstudiante(string carne, string pin) {
            return base.Channel.ValidarEstudiante(carne, pin);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarEstudianteAsync(string carne, string pin) {
            return base.Channel.ValidarEstudianteAsync(carne, pin);
        }
        
        public bool ValidarEstudianteBit(string carne, string pin, int codAplicacion, string codSede) {
            return base.Channel.ValidarEstudianteBit(carne, pin, codAplicacion, codSede);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarEstudianteBitAsync(string carne, string pin, int codAplicacion, string codSede) {
            return base.Channel.ValidarEstudianteBitAsync(carne, pin, codAplicacion, codSede);
        }
        
        public bool EsEstudianteActivo(string carne) {
            return base.Channel.EsEstudianteActivo(carne);
        }
        
        public System.Threading.Tasks.Task<bool> EsEstudianteActivoAsync(string carne) {
            return base.Channel.EsEstudianteActivoAsync(carne);
        }
        
        public bool EsEstudiante(string carne) {
            return base.Channel.EsEstudiante(carne);
        }
        
        public System.Threading.Tasks.Task<bool> EsEstudianteAsync(string carne) {
            return base.Channel.EsEstudianteAsync(carne);
        }
        
        public bool ValidarFuncionario(string usuario, string password) {
            return base.Channel.ValidarFuncionario(usuario, password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarFuncionarioAsync(string usuario, string password) {
            return base.Channel.ValidarFuncionarioAsync(usuario, password);
        }
        
        public bool ValidarFuncionarioBit(string usuario, string password, int codAplicacion, string codSede) {
            return base.Channel.ValidarFuncionarioBit(usuario, password, codAplicacion, codSede);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarFuncionarioBitAsync(string usuario, string password, int codAplicacion, string codSede) {
            return base.Channel.ValidarFuncionarioBitAsync(usuario, password, codAplicacion, codSede);
        }
        
        public bool ValidarFuncionarioBitSinCedula(string usuario, string password, int codAplicacion, string codSede) {
            return base.Channel.ValidarFuncionarioBitSinCedula(usuario, password, codAplicacion, codSede);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarFuncionarioBitSinCedulaAsync(string usuario, string password, int codAplicacion, string codSede) {
            return base.Channel.ValidarFuncionarioBitSinCedulaAsync(usuario, password, codAplicacion, codSede);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DSRI.wsSeguridad.ComprobarUsuarioADResponse DSRI.wsSeguridad.SeguridadSoap.ComprobarUsuarioAD(DSRI.wsSeguridad.ComprobarUsuarioADRequest request) {
            return base.Channel.ComprobarUsuarioAD(request);
        }
        
        public bool ComprobarUsuarioAD(string usuario, out string nombre) {
            DSRI.wsSeguridad.ComprobarUsuarioADRequest inValue = new DSRI.wsSeguridad.ComprobarUsuarioADRequest();
            inValue.usuario = usuario;
            DSRI.wsSeguridad.ComprobarUsuarioADResponse retVal = ((DSRI.wsSeguridad.SeguridadSoap)(this)).ComprobarUsuarioAD(inValue);
            nombre = retVal.nombre;
            return retVal.ComprobarUsuarioADResult;
        }
        
        public System.Threading.Tasks.Task<DSRI.wsSeguridad.ComprobarUsuarioADResponse> ComprobarUsuarioADAsync(DSRI.wsSeguridad.ComprobarUsuarioADRequest request) {
            return base.Channel.ComprobarUsuarioADAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DSRI.wsSeguridad.ComprobarEstudianteResponse DSRI.wsSeguridad.SeguridadSoap.ComprobarEstudiante(DSRI.wsSeguridad.ComprobarEstudianteRequest request) {
            return base.Channel.ComprobarEstudiante(request);
        }
        
        public bool ComprobarEstudiante(string carne, out string nombre) {
            DSRI.wsSeguridad.ComprobarEstudianteRequest inValue = new DSRI.wsSeguridad.ComprobarEstudianteRequest();
            inValue.carne = carne;
            DSRI.wsSeguridad.ComprobarEstudianteResponse retVal = ((DSRI.wsSeguridad.SeguridadSoap)(this)).ComprobarEstudiante(inValue);
            nombre = retVal.nombre;
            return retVal.ComprobarEstudianteResult;
        }
        
        public System.Threading.Tasks.Task<DSRI.wsSeguridad.ComprobarEstudianteResponse> ComprobarEstudianteAsync(DSRI.wsSeguridad.ComprobarEstudianteRequest request) {
            return base.Channel.ComprobarEstudianteAsync(request);
        }
        
        public bool ValidarUsuarioSistema(string usuario, string password, int codAplicacion, string codSede) {
            return base.Channel.ValidarUsuarioSistema(usuario, password, codAplicacion, codSede);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarUsuarioSistemaAsync(string usuario, string password, int codAplicacion, string codSede) {
            return base.Channel.ValidarUsuarioSistemaAsync(usuario, password, codAplicacion, codSede);
        }
        
        public bool TienePermisoFuncionalidad(int pCOD_APLICACION, int pCOD_FUNCIONALIDAD, string pID_USUARIO, string pCOD_SEDE) {
            return base.Channel.TienePermisoFuncionalidad(pCOD_APLICACION, pCOD_FUNCIONALIDAD, pID_USUARIO, pCOD_SEDE);
        }
        
        public System.Threading.Tasks.Task<bool> TienePermisoFuncionalidadAsync(int pCOD_APLICACION, int pCOD_FUNCIONALIDAD, string pID_USUARIO, string pCOD_SEDE) {
            return base.Channel.TienePermisoFuncionalidadAsync(pCOD_APLICACION, pCOD_FUNCIONALIDAD, pID_USUARIO, pCOD_SEDE);
        }
        
        public bool TieneAccesoAplicacion(int pCOD_APLICACION, string pID_USUARIO, string pCOD_SEDE) {
            return base.Channel.TieneAccesoAplicacion(pCOD_APLICACION, pID_USUARIO, pCOD_SEDE);
        }
        
        public System.Threading.Tasks.Task<bool> TieneAccesoAplicacionAsync(int pCOD_APLICACION, string pID_USUARIO, string pCOD_SEDE) {
            return base.Channel.TieneAccesoAplicacionAsync(pCOD_APLICACION, pID_USUARIO, pCOD_SEDE);
        }
        
        public System.Data.DataSet ObtenerMenuUsuario(int pCod_Aplicacion, string pId_Usuario, string pCod_Sede) {
            return base.Channel.ObtenerMenuUsuario(pCod_Aplicacion, pId_Usuario, pCod_Sede);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerMenuUsuarioAsync(int pCod_Aplicacion, string pId_Usuario, string pCod_Sede) {
            return base.Channel.ObtenerMenuUsuarioAsync(pCod_Aplicacion, pId_Usuario, pCod_Sede);
        }
        
        public string ObtenerCedula(string pID_USUARIO) {
            return base.Channel.ObtenerCedula(pID_USUARIO);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerCedulaAsync(string pID_USUARIO) {
            return base.Channel.ObtenerCedulaAsync(pID_USUARIO);
        }
        
        public string ObtenerDepartamento(string pID_USUARIO) {
            return base.Channel.ObtenerDepartamento(pID_USUARIO);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerDepartamentoAsync(string pID_USUARIO) {
            return base.Channel.ObtenerDepartamentoAsync(pID_USUARIO);
        }
        
        public string ObtenerNombreUsuario(string pID_USUARIO) {
            return base.Channel.ObtenerNombreUsuario(pID_USUARIO);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerNombreUsuarioAsync(string pID_USUARIO) {
            return base.Channel.ObtenerNombreUsuarioAsync(pID_USUARIO);
        }
        
        public string ObtenerSedeUsuario(string pID_USUARIO) {
            return base.Channel.ObtenerSedeUsuario(pID_USUARIO);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerSedeUsuarioAsync(string pID_USUARIO) {
            return base.Channel.ObtenerSedeUsuarioAsync(pID_USUARIO);
        }
        
        public System.Data.DataSet ObtenerListaSedes() {
            return base.Channel.ObtenerListaSedes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerListaSedesAsync() {
            return base.Channel.ObtenerListaSedesAsync();
        }
        
        public System.Data.DataSet BuscarUsuario(string txtBusqueda) {
            return base.Channel.BuscarUsuario(txtBusqueda);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarUsuarioAsync(string txtBusqueda) {
            return base.Channel.BuscarUsuarioAsync(txtBusqueda);
        }
        
        public string BuscarUsuarioXCedula(string cedula) {
            return base.Channel.BuscarUsuarioXCedula(cedula);
        }
        
        public System.Threading.Tasks.Task<string> BuscarUsuarioXCedulaAsync(string cedula) {
            return base.Channel.BuscarUsuarioXCedulaAsync(cedula);
        }
        
        public void BitacoraRegistrarUso(int pCod_Aplicacion, int pCod_Funcionalidad, string pCod_Sede, DSRI.wsSeguridad.eTipoEventoBitacora pTipo_Evento, string pId_Usuario, string pDatosEspecificos) {
            base.Channel.BitacoraRegistrarUso(pCod_Aplicacion, pCod_Funcionalidad, pCod_Sede, pTipo_Evento, pId_Usuario, pDatosEspecificos);
        }
        
        public System.Threading.Tasks.Task BitacoraRegistrarUsoAsync(int pCod_Aplicacion, int pCod_Funcionalidad, string pCod_Sede, DSRI.wsSeguridad.eTipoEventoBitacora pTipo_Evento, string pId_Usuario, string pDatosEspecificos) {
            return base.Channel.BitacoraRegistrarUsoAsync(pCod_Aplicacion, pCod_Funcionalidad, pCod_Sede, pTipo_Evento, pId_Usuario, pDatosEspecificos);
        }
        
        public void CambiarPassword(string usuario, string passwordActual, string passwordNuevo) {
            base.Channel.CambiarPassword(usuario, passwordActual, passwordNuevo);
        }
        
        public System.Threading.Tasks.Task CambiarPasswordAsync(string usuario, string passwordActual, string passwordNuevo) {
            return base.Channel.CambiarPasswordAsync(usuario, passwordActual, passwordNuevo);
        }
        
        public System.Data.DataSet ObtenerUsuariosDeRol(int pCOD_ROL) {
            return base.Channel.ObtenerUsuariosDeRol(pCOD_ROL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerUsuariosDeRolAsync(int pCOD_ROL) {
            return base.Channel.ObtenerUsuariosDeRolAsync(pCOD_ROL);
        }
        
        public System.Data.DataSet ObtenerRolesDeUsuario(string pID_USUARIO) {
            return base.Channel.ObtenerRolesDeUsuario(pID_USUARIO);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerRolesDeUsuarioAsync(string pID_USUARIO) {
            return base.Channel.ObtenerRolesDeUsuarioAsync(pID_USUARIO);
        }
        
        public System.Data.DataSet ConsultaBitacora(int pCOD_APLICACION, string pID_USUARIO, System.DateTime pFHO_INICIO, System.DateTime pFHO_FIN) {
            return base.Channel.ConsultaBitacora(pCOD_APLICACION, pID_USUARIO, pFHO_INICIO, pFHO_FIN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaBitacoraAsync(int pCOD_APLICACION, string pID_USUARIO, System.DateTime pFHO_INICIO, System.DateTime pFHO_FIN) {
            return base.Channel.ConsultaBitacoraAsync(pCOD_APLICACION, pID_USUARIO, pFHO_INICIO, pFHO_FIN);
        }
        
        public System.Data.DataSet getUser(string pID_USUARIO) {
            return base.Channel.getUser(pID_USUARIO);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getUserAsync(string pID_USUARIO) {
            return base.Channel.getUserAsync(pID_USUARIO);
        }
        
        public System.Data.DataSet getUserByMail(string correo) {
            return base.Channel.getUserByMail(correo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getUserByMailAsync(string correo) {
            return base.Channel.getUserByMailAsync(correo);
        }
        
        public System.Data.DataSet findUserByName(string texto) {
            return base.Channel.findUserByName(texto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> findUserByNameAsync(string texto) {
            return base.Channel.findUserByNameAsync(texto);
        }
        
        public System.Data.DataSet findUserByEmail(string texto) {
            return base.Channel.findUserByEmail(texto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> findUserByEmailAsync(string texto) {
            return base.Channel.findUserByEmailAsync(texto);
        }
        
        public int TipoUsuario(string usuario) {
            return base.Channel.TipoUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task<int> TipoUsuarioAsync(string usuario) {
            return base.Channel.TipoUsuarioAsync(usuario);
        }
        
        public System.Data.DataSet TDInformacionUsuario(string cedula) {
            return base.Channel.TDInformacionUsuario(cedula);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TDInformacionUsuarioAsync(string cedula) {
            return base.Channel.TDInformacionUsuarioAsync(cedula);
        }
        
        public System.Data.DataSet TDProfesores(string ano, string modalidad, string periodo, string departamento, string sede) {
            return base.Channel.TDProfesores(ano, modalidad, periodo, departamento, sede);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TDProfesoresAsync(string ano, string modalidad, string periodo, string departamento, string sede) {
            return base.Channel.TDProfesoresAsync(ano, modalidad, periodo, departamento, sede);
        }
    }
}
